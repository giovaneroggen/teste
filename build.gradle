buildscript {
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.asciidoctor:asciidoctor-gradle-plugin:1.5.3")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.asciidoctor.convert'

group 'com.roggen.voting'
version '1.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenLocal()
    mavenCentral()
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Greenwich.SR2"
    }
}

test {
    useJUnitPlatform()
}

dependencies {
    compile("org.springframework.cloud:spring-cloud-starter")
    compile("org.springframework.cloud:spring-cloud-starter-stream-rabbit")
    compile('org.springframework.boot:spring-boot-starter-webflux')
    compile("org.springframework.boot:spring-boot-starter-data-mongodb-reactive")
    compile('org.projectlombok:lombok:1.18.8')
    compileOnly('javax.annotation:javax.annotation-api:1.3.1')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('io.projectreactor:reactor-test')
    testCompile("org.springframework.restdocs:spring-restdocs-webtestclient")
    testCompile("de.flapdoodle.embed:de.flapdoodle.embed.mongo")
    testCompile('org.junit.jupiter:junit-jupiter-api')
    testCompile('org.junit.jupiter:junit-jupiter-engine')
    testCompile("com.squareup.okhttp3:mockwebserver:4.1.0")

    asciidoctor "org.springframework.restdocs:spring-restdocs-asciidoctor"
}

asciidoctor {
    sourceDir 'src/main/asciidoc'
    attributes \
      'snippets': file('build/generated-snippets')
}
